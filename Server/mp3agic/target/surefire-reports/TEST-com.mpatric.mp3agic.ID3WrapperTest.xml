<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="com.mpatric.mp3agic.ID3WrapperTest" time="0.002" tests="107" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="java.vm.version" value="10.0.2+13"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk-10.0.2\bin"/>
    <property name="maven.multiModuleProjectDirectory" value="C:\Users\100551324\Documents\Dist System\Project\RMI\Server\mp3agic-master"/>
    <property name="java.vm.vendor" value="&quot;Oracle Corporation&quot;"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="path.separator" value=";"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="user.script" value=""/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="C:\Users\100551324\Documents\Dist System\Project\RMI\Server\mp3agic-master"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="java.runtime.version" value="10.0.2+13"/>
    <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="C:\Users\100551~1\AppData\Local\Temp\"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="user.variant" value=""/>
    <property name="os.name" value="Windows 10"/>
    <property name="classworlds.conf" value="C:\apache-maven-3.5.4\bin\..\bin\m2.conf"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk-10.0.2\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Git\cmd;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\MSC.Software\Patran_x64\20180\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\MSC.Software\Adams\2018\bin;C:\Program Files (x86)\IVI Foundation\VISA\WinNT\Bin\;C:\Program Files\IVI Foundation\VISA\Win64\Bin\;C:\Program Files (x86)\IVI Foundation\VISA\WinNT\Bin;C:\Program Files\MATLAB\R2018a\runtime\win64;C:\Program Files\PuTTY\;C:\Program Files\SASHome\SASFoundation\9.4\ets\sasexe;C:\Program Files\SASHome\Secure\ccme4;C:\Program Files\MiKTeX 2.9\miktex\bin\x64\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Windows Kits\8.1\Windows Performance Toolkit\;C:\Program Files\MATLAB\R2018a\bin;C:\Program Files (x86)\Windows Live\Shared;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-10.0.2\bin;C:\Users\100551324\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Python27;C:\apache-maven-3.5.4\bin;;."/>
    <property name="maven.conf" value="C:\apache-maven-3.5.4\bin\../conf"/>
    <property name="jdk.debug" value="release"/>
    <property name="java.class.version" value="54.0"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="10.0"/>
    <property name="library.jansi.path" value="C:\apache-maven-3.5.4\bin\..\lib\jansi-native"/>
    <property name="user.home" value="C:\Users\100551324"/>
    <property name="user.timezone" value="America/New_York"/>
    <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/>
    <property name="file.encoding" value="Cp1252"/>
    <property name="java.specification.version" value="10"/>
    <property name="user.name" value="100551324"/>
    <property name="java.class.path" value="C:\apache-maven-3.5.4\bin\..\boot\plexus-classworlds-2.5.2.jar"/>
    <property name="java.vm.specification.version" value="10"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher clean package"/>
    <property name="java.home" value="C:\Program Files\Java\jdk-10.0.2"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="awt.toolkit" value="sun.awt.windows.WToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="10.0.2"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="sun.stderr.encoding" value="cp437"/>
    <property name="maven.home" value="C:\apache-maven-3.5.4\bin\.."/>
    <property name="file.separator" value="\"/>
    <property name="java.version.date" value="2018-07-17"/>
    <property name="java.vendor.url.bug" value="http://bugreport.java.com/bugreport/"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="java.vendor.version" value="18.3"/>
    <property name="sun.stdout.encoding" value="cp437"/>
    <property name="sun.desktop" value="windows"/>
    <property name="sun.cpu.isalist" value="amd64"/>
  </properties>
  <testcase name="getAlbumImageReturnsNullIfV2TagDoesNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setsYearOnBothV1AndV2Tags" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setsTitleOnBothV1AndV2Tags" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setUrlDoesNotThrowExceptionWhenV2TagDoesNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="clearsCommentFrameOnV2Tag" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getTitleReturnsV1TagsTitleIfV2TagsTitleIsEmpty" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getCopyrightReturnsV2TagsCopyright" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getAlbumReturnsNullIfBothTagsDoNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getArtistReturnsV1TagsArtistIfV2TagDoesNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getAlbumReturnsV1TagsAlbumIfV2TagsAlbumIsEmpty" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setTrackDoesNotThrowExceptionWhenBothTagsDoNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setGenreDoesNotThrowExceptionWhenBothTagsDoNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getGenreReturnsV1TagsGenreIfV2TagDoesNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setsCommentOnV2TagOnly" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getGenreDescriptionReturnsNullIfBothTagsDoNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setsTrackOnV2TagOnly" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setsYearOnV1TagOnly" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getTitleReturnsNullIfBothTagsDoNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getTrackReturnsV1TagsTrackIfV2TagDoesNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getAlbumArtistReturnsNullIfV2TagDoesNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setAlbumDoesNotThrowExceptionWhenBothTagsDoNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getOriginalArtistReturnsV2TagsOriginalArtist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setsAlbumArtistOnV2Tag" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="clearCopyrightDoesNotThrowExceptionWhenV2TagDoesNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getGenreReturnsNegativeOneIfBothTagsDoNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="clearsCommentOnV1Tag" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getArtistReturnsNullIfBothTagsDoNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getAlbumReturnsV1TagsAlbumIfV2TagsAlbumDoesNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setArtistDoesNotThrowExceptionWhenBothTagsDoNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setsAlbumOnBothV1AndV2Tags" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setCopyrightDoesNotThrowExceptionWhenV2TagDoesNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getYearReturnsV1TagsYearIfV2TagsYearIsEmpty" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getAlbumReturnsV1TagsAlbumIfV2TagDoesNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getCommentReturnsV1TagsCommentIfV2TagDoesNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getCommentReturnsNullIfBothTagsDoNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getOriginalArtistReturnsNullIfV2TagDoesNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="clearsEncoderFrameOnV2Tag" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getYearReturnsV1TagsYearIfV2TagDoesNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getGenreDescriptionReturnsV1TagsGenreDescriptionIfV2TagDoesNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setOriginalArtistDoesNotThrowExceptionWhenV2TagDoesNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setLyricsDoesNotThrowExceptionWhenV2TagDoesNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getTitleReturnsV1TagsTitleIfV2TagsTitleDoesNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setsGenreOnV2TagOnly" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setsEncoderOnV2Tag" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getTrackReturnsV1TagsTrackIfV2TagsTrackDoesNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getTrackReturnsV2TagsTrackBeforeV1TagsTrack" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setsGenreOnBothV1AndV2Tags" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setsArtistOnBothV1AndV2Tags" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getArtistReturnsV2TagsArtistBeforeV1TagsArtist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setsUrlOnV2Tag" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getAlbumArtistReturnsV2TagsAlbumArtist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getAlbumReturnsV2TagsAlbumBeforeV1TagsAlbum" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setEncoderDoesNotThrowExceptionWhenV2TagDoesNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setsTitleOnV1TagOnly" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setsYearOnV2TagOnly" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setCommentDoesNotThrowExceptionWhenBothTagsDoNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setsCommentOnBothV1AndV2Tags" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setsAlbumOnV1TagOnly" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getEncoderReturnsNullIfV2TagDoesNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setsOriginalArtistOnV2Tag" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setTitleDoesNotThrowExceptionWhenBothTagsDoNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getLyricsReturnsNullIfV2TagDoesNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setsArtistOnV1TagOnly" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="returnsNullV1Tag" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="returnsNullV2Tag" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getGenreReturnsV1TagsGenreIfV2TagsGenreIsNegativeOne" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setsTrackOnBothV1AndV2Tags" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setAlbumImageDoesNotThrowExceptionWhenV2TagDoesNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getEncoderReturnsV2TagsEncoder" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setAlbumArtistDoesNotThrowExceptionWhenV2TagDoesNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setsCommentOnV1TagOnly" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getUrlReturnsNullIfV2TagDoesNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getArtistReturnsV1TagsArtistIfV2TagsArtistIsEmpty" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getGenreDescriptionReturnsV2TagsGenreDescriptionBeforeV1TagsGenreDescription" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setsTrackOnV1TagOnly" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setsCopyrightOnV2Tag" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getCommentReturnsV1TagsCommentIfV2TagsCommentDoesNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getLyricsReturnsV2TagsLyrics" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getUrlReturnsV2TagsUrl" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="clearEncoderDoesNotThrowExceptionWhenV2TagDoesNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setsAlbumImageOnV2Tag" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setYearDoesNotThrowExceptionWhenBothTagsDoNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getYearReturnsV1TagsYearIfV2TagsYearDoesNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getTrackReturnsV1TagsTrackIfV2TagsTrackIsEmpty" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="clearsCopyrightFrameOnV2Tag" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getTitleReturnsV1TagsTitleIfV2TagDoesNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getComposerReturnsV2TagsComposer" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setsComposerOnV2Tag" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getCommentReturnsV2TagsCommentBeforeV1TagsComment" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getArtistReturnsV1TagsArtistIfV2TagsArtistDoesNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getGenreReturnsV2TagsGenreBeforeV1TagsGenre" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getYearReturnsV2TagsYearBeforeV1TagsYear" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setComposerDoesNotThrowExceptionWhenV2TagDoesNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getTitleReturnsV2TagsTitleBeforeV1TagsTitle" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getYearReturnsNullIfBothTagsDoNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="returnsV1Tag" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="returnsV2Tag" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setsTitleOnV2TagOnly" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setsLyricsOnV2Tag" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setsGenreOnV1TagOnly" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getTrackReturnsNullIfBothTagsDoNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setsAlbumOnV2TagOnly" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getCommentReturnsV1TagsCommentIfV2TagsCommentIsEmpty" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getCopyrightReturnsNullIfV2TagDoesNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getComposerReturnsNullIfV2TagDoesNotExist" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="getAlbumImageReturnsV2TagsAlbumImage" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
  <testcase name="setsArtistOnV2TagOnly" classname="com.mpatric.mp3agic.ID3WrapperTest" time="0"/>
</testsuite>